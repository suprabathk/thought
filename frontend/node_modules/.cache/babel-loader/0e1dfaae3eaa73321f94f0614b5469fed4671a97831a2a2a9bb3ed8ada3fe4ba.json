{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCon = new AbortController();\n    fetch(url, {\n      signal: abortCon.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"Cannot retrieve data from source\");\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      if (!(err.name === \"AbortError\")) {\n        setError(err.message);\n        setIsPending(false);\n      }\n    });\n    return () => abortCon.abort();\n  }, [url]);\n  return [data, isPending, error];\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCon","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort"],"sources":["/home/surya/thought/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const abortCon = new AbortController();\n        fetch(url, { signal: abortCon.signal })\n            .then((res) => {\n                if (!res.ok) {\n                    throw Error(\"Cannot retrieve data from source\");\n                }\n                return res.json()\n            })\n            .then((data) => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            }).catch((err) => {\n                if (!(err.name === \"AbortError\")) {\n                    setError(err.message);\n                    setIsPending(false);\n                }\n            })\n        return () => abortCon.abort();\n    }, [url]);\n\n    return [data, isPending, error];\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMU,QAAQ,GAAG,IAAIC,eAAe,EAAE;IACtCC,KAAK,CAACT,GAAG,EAAE;MAAEU,MAAM,EAAEH,QAAQ,CAACG;IAAO,CAAC,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAK;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACT,MAAMC,KAAK,CAAC,kCAAkC,CAAC;MACnD;MACA,OAAOF,GAAG,CAACG,IAAI,EAAE;IACrB,CAAC,CAAC,CACDJ,IAAI,CAAEV,IAAI,IAAK;MACZC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CAACU,KAAK,CAAEC,GAAG,IAAK;MACd,IAAI,EAAEA,GAAG,CAACC,IAAI,KAAK,YAAY,CAAC,EAAE;QAC9BZ,QAAQ,CAACW,GAAG,CAACE,OAAO,CAAC;QACrBf,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC,CAAC;IACN,OAAO,MAAMG,QAAQ,CAACa,KAAK,EAAE;EACjC,CAAC,EAAE,CAACpB,GAAG,CAAC,CAAC;EAET,OAAO,CAACC,IAAI,EAAEE,SAAS,EAAEE,KAAK,CAAC;AACnC,CAAC;AAAA,GA5BKN,QAAQ;AA8Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}